package be.acq.dao;

import be.acq.pojo.Personne;
import java.sql.*;

public class DAO_Personne extends DAO<Personne> {
	public DAO_Personne(Connection con) {
		super(con);
	}

	@Override
	public boolean create(Personne obj) {
		boolean b = false;
		PreparedStatement stmt = null;
		ResultSet res = null;
		try {
			stmt = connect.prepareStatement("INSERT INTO Personne (nomPersonne,prenomPersonne,"
					+ "telephonePersonne,mailPersonne,mdpPersonne) "
					+ "VALUES (?,?,?,?,?)");
			stmt.setString(1, obj.getNom());
			stmt.setString(2, obj.getPrenom());
			stmt.setString(3, obj.getTel());
			stmt.setString(4, obj.getMail());
			stmt.setString(5, obj.getMdp());
			//Execution de la commande SQL
			stmt.executeUpdate();
			res = stmt.getGeneratedKeys();
			if(res.next()) {
				int i = res.getInt(1);
				System.out.println(i);
				obj.setIDPersonne(i);
			}
			b = true;
		}
		catch(SQLException e) {
			e.printStackTrace();
		}
		return b;
	}

	@Override
	public boolean delete(Personne obj) {
		boolean b = false;
		PreparedStatement stmt = null;
		try {
			//Preparation de la commande SQL
			stmt = connect.prepareStatement("DELETE FROM Personne WHERE idPersonne = ?");
			stmt.setInt(1, obj.getIDPersonne());
			//Execution de la commande SQL
			stmt.executeUpdate();
			b = true;
		}
		catch(SQLException e) {
			e.printStackTrace();
		}
		return b;
	}

	@Override
	public boolean update(Personne obj) {
		boolean b = false;
		PreparedStatement stmt = null;
		try {
			//Preparation de la commande SQL
			stmt = connect.prepareStatement("UPDATE Personne SET nomPersonne = ?, prenomPersonne = ?, "
					+ "telephonePersonne = ?, mailPersonne = ?, mdpPersonne = ? "
					+ "WHERE idPersonne = ?");
			stmt.setString(1, obj.getNom());
			stmt.setString(2, obj.getPrenom());
			stmt.setString(3, obj.getTel());
			stmt.setString(4, obj.getMail());
			stmt.setString(5, obj.getMdp());
			stmt.setInt(6, obj.getIDPersonne());
			//Execution de la commande SQL
			stmt.executeUpdate();
			b = true;
		}
		catch(SQLException e) {
			e.printStackTrace();
		}
		return b;
	}

	@Override
	public Personne select(int id) {
		Personne p = null;
		PreparedStatement stmt = null;
		ResultSet res = null;
		try{
			stmt = connect.prepareStatement("SELECT * FROM Personne WHERE idPersonne = ?",
					ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
			stmt.setInt(1, id);
			res = stmt.executeQuery();
			if(res.first()){
				p = new Personne(res.getString("nomPersonne"), res.getString("prenomPersonne"), 
						res.getString("telephonePersonne"), res.getString("mailPersonne"),
						res.getString("mdpPersonne"));
				p.setIDPersonne(id);
			}
		}
		catch(SQLException e){
			e.printStackTrace();
		}
		return p;
	}

	//Select complémentaire pour récupérer une personne si on ne connait pas son ID (par exemple à la connexion
	//au programme)
	public Object select(String mail, String mdp) {
		Object retour;
		PreparedStatement stmt = null;
		ResultSet res = null;
		try{
			stmt = connect.prepareStatement("SELECT * FROM Personne WHERE mailPersonne = ? AND mdpPersonne = ? ",
					ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
			stmt.setString(1, mail);
			stmt.setString(2, mdp);
			res = stmt.executeQuery();
			if(res.first()){
				p = new Personne(res.getString("nomPersonne"), res.getString("prenomPersonne"), 
						res.getString("telephonePersonne"), res.getString("mailPersonne"),
						res.getString("mdpPersonne"));
				p.setIDPersonne(res.getInt("idPersonne"));
			}
		}
		catch(SQLException e){
			e.printStackTrace();
		}
		return retour;
	}
	
}
